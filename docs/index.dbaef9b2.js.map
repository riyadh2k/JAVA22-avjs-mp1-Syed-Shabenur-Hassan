{"mappings":"gtBACA,IAAIA,EAAWC,OAAO,wBACtB,MAAQD,GACNA,EAAWC,OAAO,wBAKbC,eAAeC,IACpB,MACMC,QAAiBC,MADX,yFAENC,EAAgBC,SAASC,cAAc,mBAE7C,GAAIJ,EAASK,GAAI,CACf,MAAMC,EAAiBC,OAAOC,cAAcR,EAASS,QACrDH,EAAeI,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAGC,MAAQF,EAAE,GAAGE,QAChDX,EAAcY,UAAY,GAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAeU,OAAQD,IAAK,CAC9C,MAAME,EAAWd,SAASe,cAAc,MACxCD,EAASH,UAAY,sBAAsBR,EAAeS,GAAG,GAAGI,0CAC1Cb,EAAeS,GAAG,GAAGF,eAC3CX,EAAckB,YAAYH,EAC5B,CACF,CACF,CAGOnB,eAAeuB,EAAgBF,EAAMN,GAC1C,MAAMS,EAAM,wFACNtB,QAAiBC,MAAMqB,GACvBhB,EAAiBC,OAAOC,cAAcR,EAASS,QAAU,CAAC,GAG1Dc,EAAoBjB,EAAekB,WAAUC,GAASA,EAAM,GAAGN,KAAKO,gBAAkBP,EAAKO,iBAEvE,IAAtBH,EAEFjB,EAAeiB,GAAmB,GAAGV,OAASA,EAG9CP,EAAeqB,KAAK,CAAC,GAAI,CAAER,KAAMA,EAAMN,MAAOA,KAGhDP,EAAeI,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAGC,MAAQF,EAAE,GAAGE,QAChDP,EAAesB,OAAO,GAEtB,MAAMC,EAAU,CAAC,EACjB,IAAK,IAAId,EAAI,EAAGA,EAAIT,EAAeU,OAAQD,IACzCc,EAAQd,GAAKT,EAAeS,GAAG,GAGjC,MAAMe,EAAiB,CACrBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAGvB,OAAO5B,MAAMqB,EAAKQ,EAEpB,CAtDA3B,SAASiC,eAAe,YAAYC,UAAYzC,EAyDhDE,iBACE,MAAMwB,EAAM,wFACNtB,QAAiBC,MAAMqB,GAC7B,GAAItB,EAASK,GAAI,CAEf,GAAiB,aADML,EAASS,OACT,CACrB,MAAMoB,EAAU,CAAC,EACjB,IAAK,IAAId,EAAI,EAAGA,EAAI,EAAGA,IACrBc,EAAQd,GAAK,CAAEI,UAAMmB,EAAWzB,MAAO,GAEzC,MAAMiB,EAAiB,CACrBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAEhB5B,MAAMqB,EAAKQ,EACpB,CACF,CACF,CAGAS,GAIAxC,G","sources":["src/module/main.js"],"sourcesContent":["// Get the user's name and display it on the page\nlet userName = prompt('Enter your username:');\nwhile (!userName) {\n  userName = prompt('Enter your username:');\n}\ndocument.getElementById(\"userName\").innerText = userName;\n\n//Function to display the current highscore list\nexport async function displayHighscore() {\n  const url = \"https://miniproject-try-default-rtdb.europe-west1.firebasedatabase.app/highscore.json\";\n  const response = await fetch(url);\n  const highscoreList = document.querySelector(\"#highscore-list\");\n\n  if (response.ok) {\n    const highscoreArray = Object.entries(await response.json());\n    highscoreArray.sort((a, b) => b[1].score - a[1].score);\n    highscoreList.innerHTML = \"\";\n    for (let i = 0; i < highscoreArray.length; i++) {\n      const listItem = document.createElement(\"li\");\n      listItem.innerHTML = `<span class=\"name\">${highscoreArray[i][1].name}</span>\n      <span class=\"score\">${highscoreArray[i][1].score}</span>`;\n      highscoreList.appendChild(listItem);\n    }\n  }\n}\n\n// Function to update the highscore list with a new entry\nexport async function updateHighscore(name, score) {\n  const url = \"https://miniproject-try-default-rtdb.europe-west1.firebasedatabase.app/highscore.json\";\n  const response = await fetch(url);\n  const highscoreArray = Object.entries(await response.json() || {});\n  \n  // Check if the name already exists in the highscore array\n  const existingNameIndex = highscoreArray.findIndex(entry => entry[1].name.toLowerCase() === name.toLowerCase());\n\n  if (existingNameIndex !== -1) {\n    // If the name already exists, add the new score to the existing score for that entry\n    highscoreArray[existingNameIndex][1].score += score;\n  } else {\n    // If the name does not exist, add a new entry to the highscore array\n    highscoreArray.push([\"\", { name: name, score: score }]);\n  }\n\n  highscoreArray.sort((a, b) => b[1].score - a[1].score);\n  highscoreArray.splice(5);\n\n  const updates = {};\n  for (let i = 0; i < highscoreArray.length; i++) {\n    updates[i] = highscoreArray[i][1];\n  }\n\n  const requestOptions = {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(updates)\n  };\n\n  return fetch(url, requestOptions);\n  \n}\n\n// Initialize the highscore list with five entries containing undefined names and zero scores\nasync function initializeHighscore() {\n  const url = \"https://miniproject-try-default-rtdb.europe-west1.firebasedatabase.app/highscore.json\";\n  const response = await fetch(url);\n  if (response.ok) {\n    const snapshot = await response.json();\n    if (snapshot === null) {\n      const updates = {};\n      for (let i = 0; i < 5; i++) {\n        updates[i] = { name: undefined, score: 0 };\n      }\n      const requestOptions = {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updates)\n      };\n      return fetch(url, requestOptions);\n    }\n  }\n}\n\n// Call initializeHighscore() to initialize the highscore list when the page loads\ninitializeHighscore();\n\n\n// Display the current highscore list when the page loads\ndisplayHighscore();\n\n\nexport { userName };\n"],"names":["$a2d86fb3a1635eaf$export$c86d3ca66f38ed60","prompt","async","$a2d86fb3a1635eaf$export$6ee7f7268f40aca6","response","fetch","highscoreList","document","querySelector","ok","highscoreArray","Object","entries","json","sort","a","b","score","innerHTML","i","length","listItem","createElement","name","appendChild","$a2d86fb3a1635eaf$export$d1dff7db5cbbcb72","url","existingNameIndex","findIndex","entry","toLowerCase","push","splice","updates","requestOptions","method","headers","body","JSON","stringify","getElementById","innerText","undefined","$a2d86fb3a1635eaf$var$initializeHighscore"],"version":3,"file":"index.dbaef9b2.js.map"}